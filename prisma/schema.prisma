// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // O tu base de datos
  url      = env("DATABASE_URL")
}
model Paciente {
  id        Int      @id @default(autoincrement())
  nombre    String
  email     String   @unique
  telefono  String
  password  String
  turnos    Turno[]  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Medico {
  id           Int          @id @default(autoincrement())
  nombre       String
  especialidad Especialidad @relation(fields: [especialidadId], references: [id])
  especialidadId Int
  turnos       Turno[]
  appointments Appointment[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Especialidad {
  id        Int      @id @default(autoincrement())
  nombre    String   @unique
  medicos   Medico[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Turno {
  id          Int      @id @default(autoincrement())
  paciente    Paciente @relation(fields: [pacienteId], references: [id])
  pacienteId  Int
  medico      Medico   @relation(fields: [medicoId], references: [id])
  medicoId    Int
  fecha       DateTime // Fecha del turno (sin hora)
  hora        String   // Hora del turno (ej. "14:00")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([pacienteId, fecha, hora]) // Evita que un paciente reserve m√∫ltiples turnos a la misma hora
}

model Appointment {
  id        Int      @id @default(autoincrement())
  medicoId  Int
  date      DateTime // Fecha del turno (sin hora)
  timeSlot  String   // Hora del turno (ej. "14:00")
  medico    Medico   @relation(fields: [medicoId], references: [id])
}
